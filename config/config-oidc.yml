# Spring configurations
# See also: https://docs.spring.io/spring-boot/appendix/application-properties/index.html
spring:
  threads:
    virtual: 
      enabled: true # since JDK 21 LTS supported. Can reduce memory consumption and response time in high-traffic scenarios
  profiles: # important!
    active: "oidc"
  security: # More Oauth2 properties: https://docs.spring.io/spring-security/reference/servlet/oauth2/login/core.html
     oauth2: # Remove this from the configuration (it is just an example) to avoid that this is leaked to the code repository and inject them dyamically during runtime. See: https://codeberg.org/ZuInnoTe/spring-boot-angular-example/src/branch/main/container/scripts/run-app.sh
      client:
        registration: 
          oidcidp: 
            redirect-uri: <your application rediect uri> # put here the URI of your own application redirect. Default in Spring is "{baseUrl}/login/oauth2/code/<providername>", e.g. "https://example.org/login/oauth2/code/oidcidp"
            authorization-grant-type: authorization_code # there are others - make sure you use the most secure for your use case. See also: https://docs.spring.io/spring-security/reference/servlet/oauth2/client/authorization-grants.html
            client-id: <client-id>  # Do not store in version repository - inject them dynamically during runtime
            client-secret: <secret> # Do not store in version repository - inject them dynamically during runtime
            scope: openid # refers to the scope. There can be others such as profile,email,address and possibly custom ones
            client-authentication-method: client_secret_basic # e.g. client_secret_basic, client_secret_post, private_key_jwt, cf. https://docs.spring.io/spring-security/reference/servlet/oauth2/client/client-authentication.html
        provider:
           oidcidp:
            issuer-uri: <issuer-uri> # idp metadata uri for auto-configuration. See https://docs.spring.io/spring-security/reference/servlet/oauth2/login/core.html#oauth2login-sample-application-config
            user-name-attribute: sub # needs to refer to the claim containing the unique user id, this is specific to the oauth provider
logging:
    level:
        root: "warn"
        org.springframework.web: "info"
        org.hibernate: "error"
# Server
server:
  ssl:
    enabled-protocols: TLSv1.3
    ciphers: TLS_AES_256_GCM_SHA384,TLS_CHACHA20_POLY1305_SHA256
# actuator: be careful what you expose and only expose selected minimal health endpoints to authenticated specific users
management:
   endpoints:
        jmx:
           exposure:
              exclude: "*"  # Do not expose any endpoint and carefully assess which one to expose as it can be a security risk
        web:
           exposure:
              exclude: "*" # Do not expose any endpoint and carefully assess which one to expose as it can be a security risk
        show-values: never # Redact sensitive values
h2: # only for testing purposes
  console.enabled: false
# Application configurations
application:
     oidc:
        mapper: # map jwt claims to Spring Security authorities
            jwtIdTokenClaims: ["scope","scp"] # claims from a standard OIDC IdToken https://openid.net/specs/openid-connect-core-1_0-final.html#StandardClaims
            userClaims: ["groups"] # claims from the UserInfo OIDC Endpoint (https://openid.net/specs/openid-connect-core-1_0-final.html#UserInfoResponse)
            userAttributes: [] # user attributes to be mapped to Spring Security Authorities
            claimsSeparatorMap: {"scope": " ", "scp": " ", "groups": ","} # separator if claims are one string, otherwise a JSON array is assumed
            authoritiesPrefix: "ROLE_" # Prefix for Spring Security Authorities
     https:
        headers:
          permissionPolicy: "accelerometer=(),  autoplay=(), camera=(), cross-origin-isolated=(), display-capture=(),  encrypted-media=(),  fullscreen=(), geolocation=(), gyroscope=(), keyboard-map=(), magnetometer=(), microphone=(), midi=(),  payment=(), picture-in-picture=(), publickey-credentials-get=(), screen-wake-lock=(), sync-xhr=(), usb=(), web-share=(), xr-spatial-tracking=(), clipboard-read=(), clipboard-write=(), gamepad=(),  hid=(), idle-detection=(), serial=(),  window-placement=()"
          csp: "default-src 'none'; base-uri 'self'; script-src 'self'; style-src 'self'; img-src 'self'; connect-src 'self'; font-src 'self'; object-src 'none'; media-src 'none'; child-src 'self'; form-action 'self'; frame-ancestors 'none'; navigate-to 'self'; upgrade-insecure-requests; trusted-types angular; require-trusted-types-for 'script';"
          cspNonceFilterPath: ["/","/ui/.*"]
          cspNonceFilterValue: "${cspNonce}"
          cspSPAPage: "public/index.html"
          referrerPolicy: "no-referrer" # possible values: https://github.com/spring-projects/spring-security/blob/main/web/src/main/java/org/springframework/security/web/header/writers/ReferrerPolicyHeaderWriter.java#L101
          coep: "require-corp; report-to=\"default\""
          coop: "same-origin; report-to=\"default\""
          corp: "same-origin"